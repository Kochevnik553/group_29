{
	"info": {
		"_postman_id": "64524ef6-ecaa-4337-b6a8-f2d6d2238af6",
		"name": "29_Postman_HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18486233"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Отправить запроc\r",
							"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
							"    console.log(response.json());\r",
							"});\r",
							"\r",
							"// 2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 3. Проверить, что в body приходит правильный string\r",
							"pm.test(\"Body is correct\", function () {\r",
							"    pm.response.to.have.body(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// 1. Отправить запрос.\r",
							"pm.sendRequest(\"https://postman-echo.com/get\", function (err, response) {\r",
							"    console.log(response.json());\r",
							"\r",
							"});\r",
							"// 2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"\r",
							"});\r",
							"// 3. Спарсить response body в json.\r",
							"let jData = pm.response.json();\r",
							"console.log (jData)\r",
							"\r",
							"// 4. Проверить, что name в ответе равно name s request\r",
							"pm.test(\"name_s_request\", function () {\r",
							"    let jData = pm.response.json();\r",
							"    pm.expect(jData.name).to.eql(\"Bogdan\");\r",
							"});\r",
							"\r",
							"//5. Проверить, что age в ответе равно age s request\r",
							"pm.test(\"age_s_request\", function () {\r",
							"    let jData = pm.response.json();\r",
							"    pm.expect(jData.age).to.eql('29');\r",
							"});\r",
							"\r",
							"//6. Проверить, что salary в ответе равно salary s request\r",
							"pm.test(\"salary_s_request\", function () {\r",
							"    let jData = pm.response.json();\r",
							"    pm.expect(jData.salary).to.eql(650);\r",
							"});\r",
							"\r",
							"//7. Спарсить request\r",
							"let req = JSON.parse (responseBody);\r",
							"postman.setEnvironmentVariable(\"auth_token\", jData.token);\r",
							"console.log (req);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Bogdan",
							"type": "text"
						},
						{
							"key": "age",
							"value": "29",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "650",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "/s34lfgbj/Bogdan/jjd909/67110kjkWpqc2646er554335310784evny",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		}
	]
}